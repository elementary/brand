<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="360"
   height="360"
   id="svg2"
   version="1.1"
   inkscape:version="1.0.2-2 (e86c870879, 2021-01-15)"
   sodipodi:docname="logomark-mesh.svg"
   inkscape:export-filename="/home/daniel/Projects/brand/logomark-mesh.png"
   inkscape:export-xdpi="136.53"
   inkscape:export-ydpi="136.53">
  <metadata
     id="metadata10">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs8">
    <linearGradient
       inkscape:collect="always"
       id="linearGradient837">
      <stop
         style="stop-color:#c6262e;stop-opacity:1"
         offset="0"
         id="stop833" />
      <stop
         style="stop-color:#ed5353;stop-opacity:1"
         offset="1"
         id="stop835" />
    </linearGradient>
    <clipPath
       id="highcharts-13">
      <rect
         id="rect9"
         height="338"
         width="580"
         y="0"
         x="0" />
    </clipPath>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient837"
       id="linearGradient839"
       x1="-197.82828"
       y1="310.32483"
       x2="55.84634"
       y2="56.650223"
       gradientUnits="userSpaceOnUse" />
    <clipPath
       id="highcharts-13-5">
      <rect
         x="0"
         y="0"
         width="580"
         height="338"
         id="rect9-9" />
    </clipPath>
    <clipPath
       id="highcharts-13-3">
      <rect
         x="0"
         y="0"
         width="580"
         height="338"
         id="rect9-6" />
    </clipPath>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB;"
       id="filter4288-7"
       x="-0.012"
       width="1.024"
       y="-0.012"
       height="1.024"
       inkscape:label="Lightness-Contrast">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="1.3391406"
         id="feGaussianBlur4290-4"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix33891" />
      <feColorMatrix
         id="feColorMatrix33893"
         values="1 0 0 -0.15 -0 0 1 0 -0.15 -0 0 0 1 -0.15 -0 0 0 0 1 0"
         in="fbSourceGraphic"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix34495" />
      <feColorMatrix
         id="feColorMatrix34497"
         type="hueRotate"
         values="342"
         result="color1"
         in="fbSourceGraphic" />
      <feColorMatrix
         id="feColorMatrix34499"
         type="saturate"
         values="1"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix34609" />
      <feColorMatrix
         id="feColorMatrix34611"
         values="1 0 0 -0.12 -0 0 1 0 -0.12 -0 0 0 1 -0.12 -0 0 0 0 1 0"
         in="fbSourceGraphic" />
    </filter>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB;"
       id="filter4298-5"
       x="-0.059999999"
       width="1.12"
       y="-0.059999999"
       height="1.12"
       inkscape:label="Lightness-Contrast">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="6.695703"
         id="feGaussianBlur4300-2"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix34161" />
      <feColorMatrix
         id="feColorMatrix34163"
         values="1 0 0 -0.12 -0 0 1 0 -0.12 -0 0 0 1 -0.12 -0 0 0 0 1 0"
         in="fbSourceGraphic"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix34631" />
      <feColorMatrix
         id="feColorMatrix34633"
         type="hueRotate"
         values="343"
         result="color1"
         in="fbSourceGraphic" />
      <feColorMatrix
         id="feColorMatrix34635"
         type="saturate"
         values="1"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix34655" />
      <feColorMatrix
         id="feColorMatrix34657"
         values="1 0 0 -0.4681 -0 0 1 0 -0.4681 -0 0 0 1 -0.4681 -0 0 0 0 1 0"
         in="fbSourceGraphic" />
    </filter>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient33658"
       gradientUnits="userSpaceOnUse"
       x="35.51487"
       y="136.88188"
       type="bicubic">
      <meshrow
         id="meshrow33678">
        <meshpatch
           id="meshpatch33668">
          <stop
             id="stop33660"
             style="stop-color:#ffe16b;stop-opacity:1"
             path="c 4.4454,-33.9813  73.531,-86.6115  108.432,-87.4886" />
          <stop
             id="stop33662"
             style="stop-color:#d8de5f;stop-opacity:1"
             path="c -73.6461,118.221  -2.53564,119.325  2.13796,142.518" />
          <stop
             id="stop33664"
             style="stop-color:#ffa154;stop-opacity:1"
             path="c -26.2763,17.7896  -22.3374,8.8823  -88.1592,103.113" />
          <stop
             id="stop33666"
             style="stop-color:#ed5353;stop-opacity:0.94901961"
             path="c -12.0294,-18.7437  -50.571,-72.5036  -22.4108,-158.142" />
        </meshpatch>
        <meshpatch
           id="meshpatch33676">
          <stop
             id="stop33670"
             path="c 17.9348,-4.23995  26.3839,-10.2398  69.7856,-3.84429" />
          <stop
             id="stop33672"
             style="stop-color:#9bdb4d;stop-opacity:1"
             path="c 83.8004,29.7515  100.175,88.4262  100.175,132.378" />
          <stop
             id="stop33674"
             style="stop-color:#5db3fb;stop-opacity:1"
             path="c -138.084,55.5336  -127.566,-30.3331  -167.823,13.9843" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow33694">
        <meshpatch
           id="meshpatch33686">
          <stop
             id="stop33680"
             path="c -7.66237,72.1989  2.3008,74.0306  11.3139,138.779" />
          <stop
             id="stop33682"
             style="stop-color:#e49688;stop-opacity:1"
             path="c -18.7286,2.16456  -50.0627,8.3838  -63.1741,1.97484" />
          <stop
             id="stop33684"
             style="stop-color:#ffa154;stop-opacity:1"
             path="c -36.9983,-18.331  -36.2978,7.687  -36.299,-37.6408" />
        </meshpatch>
        <meshpatch
           id="meshpatch33692">
          <stop
             id="stop33688"
             path="c 5.68434e-14,45.3313  4,25.6626  -12,94.994" />
          <stop
             id="stop33690"
             style="stop-color:#bb86dc;stop-opacity:1"
             path="c -45.7952,34.527  -114.393,54.2932  -144.509,57.7693" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient34501"
       gradientUnits="userSpaceOnUse"
       x="35.51487"
       y="136.88188"
       type="bicubic">
      <meshrow
         id="meshrow34521">
        <meshpatch
           id="meshpatch34511">
          <stop
             path="c 4.4454,-33.9813  73.531,-86.6115  108.432,-87.4886"
             style="stop-color:#ffe16b;stop-opacity:1"
             id="stop34503" />
          <stop
             path="c -73.6461,118.221  -2.53564,119.325  2.13796,142.518"
             style="stop-color:#d8de5f;stop-opacity:1"
             id="stop34505" />
          <stop
             path="c -26.2763,17.7896  -22.3374,8.8823  -88.1592,103.113"
             style="stop-color:#ffa154;stop-opacity:1"
             id="stop34507" />
          <stop
             path="c -12.0294,-18.7437  -50.571,-72.5036  -22.4108,-158.142"
             style="stop-color:#ed5353;stop-opacity:0.94901961"
             id="stop34509" />
        </meshpatch>
        <meshpatch
           id="meshpatch34519">
          <stop
             path="c 17.9348,-4.23995  26.3839,-10.2398  69.7856,-3.84429"
             id="stop34513" />
          <stop
             path="c 83.8004,29.7515  100.175,88.4262  100.175,132.378"
             style="stop-color:#9bdb4d;stop-opacity:1"
             id="stop34515" />
          <stop
             path="c -138.084,55.5336  -127.566,-30.3331  -167.823,13.9843"
             style="stop-color:#5db3fb;stop-opacity:1"
             id="stop34517" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow34537">
        <meshpatch
           id="meshpatch34529">
          <stop
             path="c -7.66237,72.1989  2.3008,74.0306  11.3139,138.779"
             id="stop34523" />
          <stop
             path="c -18.7286,2.16456  -50.0627,8.3838  -63.1741,1.97484"
             style="stop-color:#e49688;stop-opacity:1"
             id="stop34525" />
          <stop
             path="c -36.9983,-18.331  -36.2978,7.687  -36.299,-37.6408"
             style="stop-color:#ffa154;stop-opacity:1"
             id="stop34527" />
        </meshpatch>
        <meshpatch
           id="meshpatch34535">
          <stop
             path="c 5.68434e-14,45.3313  4,25.6626  -12,94.994"
             id="stop34531" />
          <stop
             path="c -45.7952,34.527  -114.393,54.2932  -144.509,57.7693"
             style="stop-color:#bb86dc;stop-opacity:1"
             id="stop34533" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient34539"
       gradientUnits="userSpaceOnUse"
       x="35.51487"
       y="136.88188"
       type="bicubic">
      <meshrow
         id="meshrow34559">
        <meshpatch
           id="meshpatch34549">
          <stop
             path="c 4.4454,-33.9813  73.531,-86.6115  108.432,-87.4886"
             style="stop-color:#ffe16b;stop-opacity:1"
             id="stop34541" />
          <stop
             path="c -73.6461,118.221  -2.53564,119.325  2.13796,142.518"
             style="stop-color:#d8de5f;stop-opacity:1"
             id="stop34543" />
          <stop
             path="c -26.2763,17.7896  -22.3374,8.8823  -88.1592,103.113"
             style="stop-color:#ffa154;stop-opacity:1"
             id="stop34545" />
          <stop
             path="c -12.0294,-18.7437  -50.571,-72.5036  -22.4108,-158.142"
             style="stop-color:#ed5353;stop-opacity:0.94901961"
             id="stop34547" />
        </meshpatch>
        <meshpatch
           id="meshpatch34557">
          <stop
             path="c 17.9348,-4.23995  26.3839,-10.2398  69.7856,-3.84429"
             id="stop34551" />
          <stop
             path="c 83.8004,29.7515  100.175,88.4262  100.175,132.378"
             style="stop-color:#9bdb4d;stop-opacity:1"
             id="stop34553" />
          <stop
             path="c -138.084,55.5336  -127.566,-30.3331  -167.823,13.9843"
             style="stop-color:#5db3fb;stop-opacity:1"
             id="stop34555" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow34575">
        <meshpatch
           id="meshpatch34567">
          <stop
             path="c -7.66237,72.1989  2.3008,74.0306  11.3139,138.779"
             id="stop34561" />
          <stop
             path="c -18.7286,2.16456  -50.0627,8.3838  -63.1741,1.97484"
             style="stop-color:#e49688;stop-opacity:1"
             id="stop34563" />
          <stop
             path="c -36.9983,-18.331  -36.2978,7.687  -36.299,-37.6408"
             style="stop-color:#ffa154;stop-opacity:1"
             id="stop34565" />
        </meshpatch>
        <meshpatch
           id="meshpatch34573">
          <stop
             path="c 5.68434e-14,45.3313  4,25.6626  -12,94.994"
             id="stop34569" />
          <stop
             path="c -45.7952,34.527  -114.393,54.2932  -144.509,57.7693"
             style="stop-color:#bb86dc;stop-opacity:1"
             id="stop34571" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1366"
     inkscape:window-height="706"
     id="namedview6"
     showgrid="false"
     borderlayer="true"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0"
     inkscape:zoom="0.70710678"
     inkscape:cx="140.03973"
     inkscape:cy="139.72294"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg2"
     showguides="false"
     inkscape:document-rotation="0" />
  <rect
     style="opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;paint-order:normal"
     id="rect34678"
     width="987.12109"
     height="940.45203"
     x="-439.8204"
     y="-154.77374" />
  <path
     transform="translate(0,5.999999)"
     sodipodi:type="inkscape:offset"
     inkscape:radius="0"
     inkscape:original="M 180 46.085938 C 106.04162 46.085938 46.085938 106.04162 46.085938 180 C 46.085938 253.95838 106.04162 313.91406 180 313.91406 C 253.95838 313.91406 313.91406 253.95838 313.91406 180 C 313.91406 106.04162 253.95838 46.085938 180 46.085938 z M 180.04688 57.210938 L 180 57.240234 C 236.22444 57.240234 283.63057 95.021529 298.16016 146.57812 C 285.67753 172.40427 267.83713 195.64788 246.17188 214.45312 C 235.74578 223.47313 224.36364 231.51903 211.79492 237.18164 C 199.22621 242.84426 185.39503 246.05779 171.62109 245.27344 C 161.29064 244.67083 151.05497 241.79109 142.02539 236.75977 C 166.03413 223.75105 187.67992 206.41866 205.4043 185.66211 C 217.07388 172.03165 227.21303 156.53603 231.13477 139.05078 C 233.12434 130.30817 233.43067 121.1637 231.61328 112.38281 C 229.79588 103.60193 225.74049 95.261368 219.59961 88.71875 C 213.6022 82.348305 205.73144 77.81479 197.29492 75.5 C 188.87751 73.175649 179.88606 72.993802 171.27734 74.5625 C 154.05993 77.719031 138.65812 87.725161 126.34766 100.15039 C 104.60589 122.05477 91.166933 152.96868 93.634766 183.73047 C 94.878241 199.11136 100.0246 214.2239 108.84375 226.86914 C 110.82375 229.70045 112.99576 232.38924 115.31055 234.93359 C 102.44531 239.45795 89.102208 242.66093 75.615234 244.46875 C 64.012606 225.7209 57.306641 203.62553 57.306641 179.9707 C 57.306641 112.15321 112.2485 57.210937 180.04688 57.210938 z M 180.77539 81.974609 L 180.76562 82.013672 C 189.4126 82.013672 198.0974 84.634801 204.98438 89.857422 C 211.18265 94.544393 215.79239 101.1828 218.375 108.50977 C 220.98632 115.83673 221.65715 123.78495 220.76758 131.51367 C 218.99801 146.96151 211.20125 161.12845 201.78906 173.50586 C 185.11686 195.41024 162.95449 212.94287 138.31445 225.22461 C 135.79878 226.4681 133.24472 227.67248 130.66211 228.82031 C 125.30557 224.13334 120.71532 218.58654 117.19531 212.36914 C 109.87791 199.39869 107.46696 184.00796 108.87305 169.19141 C 110.30784 154.3653 115.37765 140.09395 122.2168 126.86523 C 130.13682 111.53216 140.93576 97.022321 156.04883 88.671875 C 163.60537 84.491867 172.14754 81.974609 180.77539 81.974609 z M 301.65625 163.5918 C 302.36834 168.94763 302.75 174.4058 302.75 179.96094 C 302.75 247.75931 247.82766 302.72266 180.0293 302.72266 C 141.95966 302.72266 107.90603 285.38887 85.427734 258.17578 C 99.316459 255.01926 112.89988 250.47682 125.92773 244.70898 C 131.63817 249.03247 137.92348 252.59081 144.61914 255.1543 C 163.87396 262.53865 185.74824 261.46615 205.24219 254.72266 C 224.72656 247.96961 242.0207 235.8802 257.08594 221.77148 C 275.01939 205.01322 290.14459 185.25663 301.65625 163.5918 z "
     style="opacity:0.50199998;vector-effect:none;fill:url(#meshgradient33658);fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter4298-5)"
     id="path3461-1-5"
     d="M 180,46.085938 C 106.04162,46.085938 46.085938,106.04162 46.085938,180 46.085938,253.95838 106.04162,313.91406 180,313.91406 253.95838,313.91406 313.91406,253.95838 313.91406,180 313.91406,106.04162 253.95838,46.085938 180,46.085938 Z m 0.0469,11.125 -0.0469,0.0293 c 56.22444,0 103.63057,37.781295 118.16016,89.337886 -12.48263,25.82615 -30.32303,49.06976 -51.98828,67.875 -10.4261,9.02001 -21.80824,17.06591 -34.37696,22.72852 -12.56871,5.66262 -26.39989,8.87615 -40.17383,8.0918 -10.33045,-0.60261 -20.56612,-3.48235 -29.5957,-8.51367 24.00874,-13.00872 45.65453,-30.34111 63.37891,-51.09766 11.66958,-13.63046 21.80873,-29.12608 25.73047,-46.61133 1.98957,-8.74261 2.2959,-17.88708 0.47851,-26.66797 -1.8174,-8.78088 -5.87279,-17.121442 -12.01367,-23.66406 C 213.6022,82.348305 205.73144,77.81479 197.29492,75.5 c -8.41741,-2.324351 -17.40886,-2.506198 -26.01758,-0.9375 -17.21741,3.156531 -32.61922,13.162661 -44.92968,25.58789 -21.74177,21.90438 -35.180727,52.81829 -32.712894,83.58008 1.243475,15.38089 6.389834,30.49343 15.208984,43.13867 1.98,2.83131 4.15201,5.5201 6.4668,8.06445 -12.86524,4.52436 -26.208342,7.72734 -39.695316,9.53516 C 64.012606,225.7209 57.306641,203.62553 57.306641,179.9707 c 0,-67.81749 54.941859,-122.759763 122.740239,-122.759762 z m 0.72851,24.763671 -0.01,0.03906 c 8.64698,0 17.33178,2.621129 24.21876,7.84375 6.19827,4.686971 10.80801,11.325378 13.39062,18.652348 2.61132,7.32696 3.28215,15.27518 2.39258,23.0039 -1.76957,15.44784 -9.56633,29.61478 -18.97852,41.99219 -16.6722,21.90438 -38.83457,39.43701 -63.47461,51.71875 -2.51567,1.24349 -5.06973,2.44787 -7.65234,3.5957 -5.35654,-4.68697 -9.94679,-10.23377 -13.4668,-16.45117 -7.3174,-12.97045 -9.72835,-28.36118 -8.32226,-43.17773 1.43479,-14.82611 6.5046,-29.09746 13.34375,-42.32618 7.92002,-15.33307 18.71896,-29.842909 33.83203,-38.193355 7.55654,-4.180008 16.09871,-6.697266 24.72656,-6.697266 z M 301.65625,163.5918 c 0.71209,5.35583 1.09375,10.814 1.09375,16.36914 0,67.79837 -54.92234,122.76172 -122.7207,122.76172 -38.06964,0 -72.12327,-17.33379 -94.601566,-44.54688 13.888725,-3.15652 27.472146,-7.69896 40.499996,-13.4668 5.71044,4.32349 11.99575,7.88183 18.69141,10.44532 19.25482,7.38435 41.1291,6.31185 60.62305,-0.43164 19.48437,-6.75305 36.77851,-18.84246 51.84375,-32.95118 17.93345,-16.75826 33.05865,-36.51485 44.57031,-58.17968 z" />
  <path
     transform="translate(-5.4852937e-6,1.999999)"
     sodipodi:type="inkscape:offset"
     inkscape:radius="0"
     inkscape:original="M 180 46.085938 C 106.04162 46.085938 46.085938 106.04162 46.085938 180 C 46.085938 253.95838 106.04162 313.91406 180 313.91406 C 253.95838 313.91406 313.91406 253.95838 313.91406 180 C 313.91406 106.04162 253.95838 46.085938 180 46.085938 z M 180.04688 57.210938 L 180 57.240234 C 236.22444 57.240234 283.63057 95.021529 298.16016 146.57812 C 285.67753 172.40427 267.83713 195.64788 246.17188 214.45312 C 235.74578 223.47313 224.36364 231.51903 211.79492 237.18164 C 199.22621 242.84426 185.39503 246.05779 171.62109 245.27344 C 161.29064 244.67083 151.05497 241.79109 142.02539 236.75977 C 166.03413 223.75105 187.67992 206.41866 205.4043 185.66211 C 217.07388 172.03165 227.21303 156.53603 231.13477 139.05078 C 233.12434 130.30817 233.43067 121.1637 231.61328 112.38281 C 229.79588 103.60193 225.74049 95.261368 219.59961 88.71875 C 213.6022 82.348305 205.73144 77.81479 197.29492 75.5 C 188.87751 73.175649 179.88606 72.993802 171.27734 74.5625 C 154.05993 77.719031 138.65812 87.725161 126.34766 100.15039 C 104.60589 122.05477 91.166933 152.96868 93.634766 183.73047 C 94.878241 199.11136 100.0246 214.2239 108.84375 226.86914 C 110.82375 229.70045 112.99576 232.38924 115.31055 234.93359 C 102.44531 239.45795 89.102208 242.66093 75.615234 244.46875 C 64.012606 225.7209 57.306641 203.62553 57.306641 179.9707 C 57.306641 112.15321 112.2485 57.210937 180.04688 57.210938 z M 180.77539 81.974609 L 180.76562 82.013672 C 189.4126 82.013672 198.0974 84.634801 204.98438 89.857422 C 211.18265 94.544393 215.79239 101.1828 218.375 108.50977 C 220.98632 115.83673 221.65715 123.78495 220.76758 131.51367 C 218.99801 146.96151 211.20125 161.12845 201.78906 173.50586 C 185.11686 195.41024 162.95449 212.94287 138.31445 225.22461 C 135.79878 226.4681 133.24472 227.67248 130.66211 228.82031 C 125.30557 224.13334 120.71532 218.58654 117.19531 212.36914 C 109.87791 199.39869 107.46696 184.00796 108.87305 169.19141 C 110.30784 154.3653 115.37765 140.09395 122.2168 126.86523 C 130.13682 111.53216 140.93576 97.022321 156.04883 88.671875 C 163.60537 84.491867 172.14754 81.974609 180.77539 81.974609 z M 301.65625 163.5918 C 302.36834 168.94763 302.75 174.4058 302.75 179.96094 C 302.75 247.75931 247.82766 302.72266 180.0293 302.72266 C 141.95966 302.72266 107.90603 285.38887 85.427734 258.17578 C 99.316459 255.01926 112.89988 250.47682 125.92773 244.70898 C 131.63817 249.03247 137.92348 252.59081 144.61914 255.1543 C 163.87396 262.53865 185.74824 261.46615 205.24219 254.72266 C 224.72656 247.96961 242.0207 235.8802 257.08594 221.77148 C 275.01939 205.01322 290.14459 185.25663 301.65625 163.5918 z "
     style="opacity:1;vector-effect:none;fill:url(#meshgradient34539);fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter4288-7)"
     id="path3461-3-4"
     d="M 180,46.085938 C 106.04162,46.085938 46.085938,106.04162 46.085938,180 46.085938,253.95838 106.04162,313.91406 180,313.91406 253.95838,313.91406 313.91406,253.95838 313.91406,180 313.91406,106.04162 253.95838,46.085938 180,46.085938 Z m 0.0469,11.125 -0.0469,0.0293 c 56.22444,0 103.63057,37.781295 118.16016,89.337886 -12.48263,25.82615 -30.32303,49.06976 -51.98828,67.875 -10.4261,9.02001 -21.80824,17.06591 -34.37696,22.72852 -12.56871,5.66262 -26.39989,8.87615 -40.17383,8.0918 -10.33045,-0.60261 -20.56612,-3.48235 -29.5957,-8.51367 24.00874,-13.00872 45.65453,-30.34111 63.37891,-51.09766 11.66958,-13.63046 21.80873,-29.12608 25.73047,-46.61133 1.98957,-8.74261 2.2959,-17.88708 0.47851,-26.66797 -1.8174,-8.78088 -5.87279,-17.121442 -12.01367,-23.66406 C 213.6022,82.348305 205.73144,77.81479 197.29492,75.5 c -8.41741,-2.324351 -17.40886,-2.506198 -26.01758,-0.9375 -17.21741,3.156531 -32.61922,13.162661 -44.92968,25.58789 -21.74177,21.90438 -35.180727,52.81829 -32.712894,83.58008 1.243475,15.38089 6.389834,30.49343 15.208984,43.13867 1.98,2.83131 4.15201,5.5201 6.4668,8.06445 -12.86524,4.52436 -26.208342,7.72734 -39.695316,9.53516 C 64.012606,225.7209 57.306641,203.62553 57.306641,179.9707 c 0,-67.81749 54.941859,-122.759763 122.740239,-122.759762 z m 0.72851,24.763671 -0.01,0.03906 c 8.64698,0 17.33178,2.621129 24.21876,7.84375 6.19827,4.686971 10.80801,11.325378 13.39062,18.652348 2.61132,7.32696 3.28215,15.27518 2.39258,23.0039 -1.76957,15.44784 -9.56633,29.61478 -18.97852,41.99219 -16.6722,21.90438 -38.83457,39.43701 -63.47461,51.71875 -2.51567,1.24349 -5.06973,2.44787 -7.65234,3.5957 -5.35654,-4.68697 -9.94679,-10.23377 -13.4668,-16.45117 -7.3174,-12.97045 -9.72835,-28.36118 -8.32226,-43.17773 1.43479,-14.82611 6.5046,-29.09746 13.34375,-42.32618 7.92002,-15.33307 18.71896,-29.842909 33.83203,-38.193355 7.55654,-4.180008 16.09871,-6.697266 24.72656,-6.697266 z M 301.65625,163.5918 c 0.71209,5.35583 1.09375,10.814 1.09375,16.36914 0,67.79837 -54.92234,122.76172 -122.7207,122.76172 -38.06964,0 -72.12327,-17.33379 -94.601566,-44.54688 13.888725,-3.15652 27.472146,-7.69896 40.499996,-13.4668 5.71044,4.32349 11.99575,7.88183 18.69141,10.44532 19.25482,7.38435 41.1291,6.31185 60.62305,-0.43164 19.48437,-6.75305 36.77851,-18.84246 51.84375,-32.95118 17.93345,-16.75826 33.05865,-36.51485 44.57031,-58.17968 z" />
  <path
     transform="translate(10e-7,-3.0391855e-6)"
     sodipodi:type="inkscape:offset"
     inkscape:radius="0"
     inkscape:original="M 180 46.085938 C 106.04162 46.085938 46.085938 106.04162 46.085938 180 C 46.085938 253.95838 106.04162 313.91406 180 313.91406 C 253.95838 313.91406 313.91406 253.95838 313.91406 180 C 313.91406 106.04162 253.95838 46.085938 180 46.085938 z M 180.04688 57.210938 L 180 57.240234 C 236.22444 57.240234 283.63057 95.021529 298.16016 146.57812 C 285.67753 172.40427 267.83713 195.64788 246.17188 214.45312 C 235.74578 223.47313 224.36364 231.51903 211.79492 237.18164 C 199.22621 242.84426 185.39503 246.05779 171.62109 245.27344 C 161.29064 244.67083 151.05497 241.79109 142.02539 236.75977 C 166.03413 223.75105 187.67992 206.41866 205.4043 185.66211 C 217.07388 172.03165 227.21303 156.53603 231.13477 139.05078 C 233.12434 130.30817 233.43067 121.1637 231.61328 112.38281 C 229.79588 103.60193 225.74049 95.261368 219.59961 88.71875 C 213.6022 82.348305 205.73144 77.81479 197.29492 75.5 C 188.87751 73.175649 179.88606 72.993802 171.27734 74.5625 C 154.05993 77.719031 138.65812 87.725161 126.34766 100.15039 C 104.60589 122.05477 91.166933 152.96868 93.634766 183.73047 C 94.878241 199.11136 100.0246 214.2239 108.84375 226.86914 C 110.82375 229.70045 112.99576 232.38924 115.31055 234.93359 C 102.44531 239.45795 89.102208 242.66093 75.615234 244.46875 C 64.012606 225.7209 57.306641 203.62553 57.306641 179.9707 C 57.306641 112.15321 112.2485 57.210937 180.04688 57.210938 z M 180.77539 81.974609 L 180.76562 82.013672 C 189.4126 82.013672 198.0974 84.634801 204.98438 89.857422 C 211.18265 94.544393 215.79239 101.1828 218.375 108.50977 C 220.98632 115.83673 221.65715 123.78495 220.76758 131.51367 C 218.99801 146.96151 211.20125 161.12845 201.78906 173.50586 C 185.11686 195.41024 162.95449 212.94287 138.31445 225.22461 C 135.79878 226.4681 133.24472 227.67248 130.66211 228.82031 C 125.30557 224.13334 120.71532 218.58654 117.19531 212.36914 C 109.87791 199.39869 107.46696 184.00796 108.87305 169.19141 C 110.30784 154.3653 115.37765 140.09395 122.2168 126.86523 C 130.13682 111.53216 140.93576 97.022321 156.04883 88.671875 C 163.60537 84.491867 172.14754 81.974609 180.77539 81.974609 z M 301.65625 163.5918 C 302.36834 168.94763 302.75 174.4058 302.75 179.96094 C 302.75 247.75931 247.82766 302.72266 180.0293 302.72266 C 141.95966 302.72266 107.90603 285.38887 85.427734 258.17578 C 99.316459 255.01926 112.89988 250.47682 125.92773 244.70898 C 131.63817 249.03247 137.92348 252.59081 144.61914 255.1543 C 163.87396 262.53865 185.74824 261.46615 205.24219 254.72266 C 224.72656 247.96961 242.0207 235.8802 257.08594 221.77148 C 275.01939 205.01322 290.14459 185.25663 301.65625 163.5918 z "
     style="fill:url(#meshgradient34501);fill-opacity:1"
     id="path3461-6-7"
     d="M 180,46.085938 C 106.04162,46.085938 46.085938,106.04162 46.085938,180 46.085938,253.95838 106.04162,313.91406 180,313.91406 253.95838,313.91406 313.91406,253.95838 313.91406,180 313.91406,106.04162 253.95838,46.085938 180,46.085938 Z m 0.0469,11.125 -0.0469,0.0293 c 56.22444,0 103.63057,37.781295 118.16016,89.337886 -12.48263,25.82615 -30.32303,49.06976 -51.98828,67.875 -10.4261,9.02001 -21.80824,17.06591 -34.37696,22.72852 -12.56871,5.66262 -26.39989,8.87615 -40.17383,8.0918 -10.33045,-0.60261 -20.56612,-3.48235 -29.5957,-8.51367 24.00874,-13.00872 45.65453,-30.34111 63.37891,-51.09766 11.66958,-13.63046 21.80873,-29.12608 25.73047,-46.61133 1.98957,-8.74261 2.2959,-17.88708 0.47851,-26.66797 -1.8174,-8.78088 -5.87279,-17.121442 -12.01367,-23.66406 C 213.6022,82.348305 205.73144,77.81479 197.29492,75.5 c -8.41741,-2.324351 -17.40886,-2.506198 -26.01758,-0.9375 -17.21741,3.156531 -32.61922,13.162661 -44.92968,25.58789 -21.74177,21.90438 -35.180727,52.81829 -32.712894,83.58008 1.243475,15.38089 6.389834,30.49343 15.208984,43.13867 1.98,2.83131 4.15201,5.5201 6.4668,8.06445 -12.86524,4.52436 -26.208342,7.72734 -39.695316,9.53516 C 64.012606,225.7209 57.306641,203.62553 57.306641,179.9707 c 0,-67.81749 54.941859,-122.759763 122.740239,-122.759762 z m 0.72851,24.763671 -0.01,0.03906 c 8.64698,0 17.33178,2.621129 24.21876,7.84375 6.19827,4.686971 10.80801,11.325378 13.39062,18.652348 2.61132,7.32696 3.28215,15.27518 2.39258,23.0039 -1.76957,15.44784 -9.56633,29.61478 -18.97852,41.99219 -16.6722,21.90438 -38.83457,39.43701 -63.47461,51.71875 -2.51567,1.24349 -5.06973,2.44787 -7.65234,3.5957 -5.35654,-4.68697 -9.94679,-10.23377 -13.4668,-16.45117 -7.3174,-12.97045 -9.72835,-28.36118 -8.32226,-43.17773 1.43479,-14.82611 6.5046,-29.09746 13.34375,-42.32618 7.92002,-15.33307 18.71896,-29.842909 33.83203,-38.193355 7.55654,-4.180008 16.09871,-6.697266 24.72656,-6.697266 z M 301.65625,163.5918 c 0.71209,5.35583 1.09375,10.814 1.09375,16.36914 0,67.79837 -54.92234,122.76172 -122.7207,122.76172 -38.06964,0 -72.12327,-17.33379 -94.601566,-44.54688 13.888725,-3.15652 27.472146,-7.69896 40.499996,-13.4668 5.71044,4.32349 11.99575,7.88183 18.69141,10.44532 19.25482,7.38435 41.1291,6.31185 60.62305,-0.43164 19.48437,-6.75305 36.77851,-18.84246 51.84375,-32.95118 17.93345,-16.75826 33.05865,-36.51485 44.57031,-58.17968 z" />
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
